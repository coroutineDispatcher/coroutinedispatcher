<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>RxJava - Tag - Coroutinedispatchers&#39; blog</title>
        <link>coroutinedispatcher.github.io/tags/rxjava/</link>
        <description>RxJava - Tag - Coroutinedispatchers&#39; blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>stavro96@gmail.com (Stavro Xhardha)</managingEditor>
            <webMaster>stavro96@gmail.com (Stavro Xhardha)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 14 Oct 2019 10:00:00 &#43;0200</lastBuildDate><atom:link href="coroutinedispatcher.github.io/tags/rxjava/" rel="self" type="application/rss+xml" /><item>
    <title>Room and coroutines testing</title>
    <link>coroutinedispatcher.github.io/posts/room-and-coroutines-testing/</link>
    <pubDate>Mon, 14 Oct 2019 10:00:00 &#43;0200</pubDate>
    <author>Author</author>
    <guid>coroutinedispatcher.github.io/posts/room-and-coroutines-testing/</guid>
    <description><![CDATA[My last article covered some simple example about Room and RxJava instrumentation testing code. Coroutines also have great support in unit testing even though todays topic has nothing to do with it. What I mean is that we are not going to cover runBlockingTest this time. Android doesn&rsquo;t support that (correct me if I&rsquo;m wrong please) yet. However, I could schedule a topic about that because it really makes me excited.]]></description>
</item><item>
    <title>Room and RxJava testing</title>
    <link>coroutinedispatcher.github.io/posts/room-and-rxjava-testing/</link>
    <pubDate>Mon, 07 Oct 2019 09:30:00 &#43;0200</pubDate>
    <author>Author</author>
    <guid>coroutinedispatcher.github.io/posts/room-and-rxjava-testing/</guid>
    <description><![CDATA[&amp;nbps; When it comes to testing the data layer, we should always have time for that. It&rsquo;s very important. You lose data, you lose users. Since I really found testing + Room pretty amusing, I thought I should share it with you.
Room has already a great support for RxJava or Coroutines. I have used both ways to access the data layer and I was really satisfied with both. So I decided to make a 2-series blog posts with testing in Room with RxJava and testing Room with coroutines.]]></description>
</item></channel>
</rss>
