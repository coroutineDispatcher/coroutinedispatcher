<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Coroutinedispatchers&#39; blog</title>
        <link>http://coroutinedispatcher.com/posts/</link>
        <description>All Posts | Coroutinedispatchers&#39; blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>stavro96@gmail.com (Stavro Xhardha)</managingEditor>
            <webMaster>stavro96@gmail.com (Stavro Xhardha)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 13 Dec 2020 18:15:51 &#43;0100</lastBuildDate><atom:link href="http://coroutinedispatcher.com/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Stateful MVVM across process death using SharedFlow</title>
    <link>http://coroutinedispatcher.com/posts/decorate_stateful_mvvm/</link>
    <pubDate>Sun, 13 Dec 2020 18:15:51 &#43;0100</pubDate>
    <author>Author</author>
    <guid>http://coroutinedispatcher.com/posts/decorate_stateful_mvvm/</guid>
    <description><![CDATA[onCreate Lately, I have been playing and exploring SharedFlow. A pretty nice and very helpful design for situations like this. But as I was building a ViewModel this week, I ran into an architecture design dilema.
onPause Disclamer: The solution given below, might not be the best out there, so please feel free to give your thoughts and critics for this.
onResume Let&rsquo;s consider this quick example:
class SomeViewModel @ViewModelInject constructor( private val dependency1: Dependency1, private val dependency2 : Dependency2, @Assisted private val savedStateHandle: SavedStateHandle ) : ViewModel() { private val _state : MutableSharedFlow&lt;State&gt; = MutableSharedFlow() val state : SharedFlow&lt;State&gt; = _state.]]></description>
</item><item>
    <title>Usage of SharedFlow</title>
    <link>http://coroutinedispatcher.com/posts/shared-flow/</link>
    <pubDate>Tue, 27 Oct 2020 14:24:48 &#43;0100</pubDate>
    <author>Author</author>
    <guid>http://coroutinedispatcher.com/posts/shared-flow/</guid>
    <description><![CDATA[onCreate With the 1.4 Update, kotlin coroutines brought us a lot of features and improvements. One of them was the introduction of SharedFlow. Basically, what I would like to call it, is simply a &ldquo;Single Event StateFlow&rdquo;. Remember single event LiveData workaround? Well, here you have it, but 100% kotlin, and not a workaround anymore. If you are more interested in an even more detailed explanation, follow this issue on Github, brought by Roman Elizarov.]]></description>
</item><item>
    <title>First experience with Jetpack Compose</title>
    <link>http://coroutinedispatcher.com/posts/get_started_with_compose/</link>
    <pubDate>Fri, 11 Sep 2020 18:23:50 &#43;0200</pubDate>
    <author>Author</author>
    <guid>http://coroutinedispatcher.com/posts/get_started_with_compose/</guid>
    <description><![CDATA[onCreate It&rsquo;s been a couple of weeks since Jetpack Compose reached in alpha state. So, I thought I should start giving it a try. Getting started with it is not that hard. There are a lot of options, but I will render what worked for me:
 Joe Birch&rsquo;s blog. Stack Overflow A quick read through the Google Codelabs Jetpack sample apps from Google&rsquo;s repository (Mostly looking at JetNews)  Note  This posts code example is not a best practice example.]]></description>
</item><item>
    <title>The Great Wall of China was originally created to keep WebView out. It failed miserably.</title>
    <link>http://coroutinedispatcher.com/posts/webview-android/</link>
    <pubDate>Fri, 07 Aug 2020 21:06:25 &#43;0200</pubDate>
    <author>Author</author>
    <guid>http://coroutinedispatcher.com/posts/webview-android/</guid>
    <description><![CDATA[onCreate Let&rsquo;s face it, getting a NaN in Android is more frustrating than a (Kotlin)NullPointerException. Well, as a Native Android developer, I actually never touched the web professionally, except playing around with Vue js when people seemed pretty hyped for it. I tried to be a web developer only once in my life, but even then, I cheated, I used KotlinJS.
Anyways, many mobile developers have been in situations when they had to write a WebViewFragment and load an URL.]]></description>
</item><item>
    <title>First look on Hilt</title>
    <link>http://coroutinedispatcher.com/posts/first-look-on-hilt/</link>
    <pubDate>Thu, 11 Jun 2020 21:04:00 &#43;0200</pubDate>
    <author>Author</author>
    <guid>http://coroutinedispatcher.com/posts/first-look-on-hilt/</guid>
    <description><![CDATA[onCreate A new Dependency Injection library called Hilt was presented from the Google team. It was designed on top of Dagger library and provides a simpler, less boilerplate API to handle dependencies in an Android application. As first try, it was a real game changer. Therefore, we will make a short introduction to it, and then discuss about some opinions.
Why was it build? First of all, Dagger was a little hard to start with, especially for beginners.]]></description>
</item><item>
    <title>Realm 7, the frozen throne</title>
    <link>http://coroutinedispatcher.com/posts/realm-7-frozen-throne/</link>
    <pubDate>Sat, 30 May 2020 19:52:00 &#43;0200</pubDate>
    <author>Author</author>
    <guid>http://coroutinedispatcher.com/posts/realm-7-frozen-throne/</guid>
    <description><![CDATA[onCreate As many of us might know, Realm has already introduced freezing objects. Personally, I have been waiting for long time for such feature. So, what actual problem does this solve?
A lot of us might have faced this issue:
Realm access from incorrect thread. Realm objects can only be accessed on the thread they were created. I believe the error speaks for itself.
Realm &lt; 7.0: When you call Realm.]]></description>
</item><item>
    <title>Why LiveData is the best solution (yet) for UI</title>
    <link>http://coroutinedispatcher.com/posts/why-livedata-is-best-solution-yet-for-ui/</link>
    <pubDate>Sat, 23 May 2020 18:41:00 &#43;0200</pubDate>
    <author>Author</author>
    <guid>http://coroutinedispatcher.com/posts/why-livedata-is-best-solution-yet-for-ui/</guid>
    <description><![CDATA[Why LiveData is the best solution (yet) for UI
As far as I am concerned, there are many developers who don&rsquo;t like LiveData. However, for the UI part, there is no better API to achieve MVVM (or even MVI,or stateful MVVM). Furthermore, makes the UI control very easy.
There might have been some small misconceptions regarding the usage of it, but, if you use LiveData for the purpose it was created, I think that&rsquo;s far better than any other API (for the moment).]]></description>
</item><item>
    <title>Coroutines and callbacks</title>
    <link>http://coroutinedispatcher.com/posts/coroutines-and-callbacks/</link>
    <pubDate>Sun, 05 Apr 2020 14:30:00 &#43;0200</pubDate>
    <author>Author</author>
    <guid>http://coroutinedispatcher.com/posts/coroutines-and-callbacks/</guid>
    <description><![CDATA[Callbacks in Java are probably the most basic way to perform executions/send actions between classes. If you have chosen to use coroutines in a project, you want to keep the same style everywhere. But what if some of the libraries you use, are still using callbacks?
No worries, Kotlin coroutines are easily integrated with callbacks. It&rsquo;s just a small workaround to make.
Let&rsquo;s think of a very simple use case:]]></description>
</item><item>
    <title>My first remote experience</title>
    <link>http://coroutinedispatcher.com/posts/my-first-remote-experience/</link>
    <pubDate>Fri, 20 Mar 2020 21:41:00 &#43;0100</pubDate>
    <author>Author</author>
    <guid>http://coroutinedispatcher.com/posts/my-first-remote-experience/</guid>
    <description><![CDATA[typealias Coroutine = Quarantine I hope you get the joke&hellip;.
Well, it has been a very rough year for me, &ldquo;motion-ally&rdquo; and emotionally. I moved to Germany just when all these corona fear started. Luckily I got time to get introduced to the team and the project and got ready to start fresh . And then, since the situation with the epidemic wasn&rsquo;t getting any better, the company decided to switch to home office.]]></description>
</item><item>
    <title>Getting rid of the white screen on the app start up</title>
    <link>http://coroutinedispatcher.com/posts/getting-rid-of-white-screen-on-app/</link>
    <pubDate>Wed, 04 Mar 2020 21:58:00 &#43;0100</pubDate>
    <author>Author</author>
    <guid>http://coroutinedispatcher.com/posts/getting-rid-of-white-screen-on-app/</guid>
    <description><![CDATA[Details matter especially when it comes to making users happy. We have all kinds of users, those who don&rsquo;t care how the app is designed (just do what he/she needs), those who care, and those who are developers themselves. I have met people who don&rsquo;t use a single app just because it has some strange animation, and they hate it.
For me, it&rsquo;s a little from both. I Like seeing a minimalist design (like Airbnb Android app, which is one of my favorites, for instance), but it is also important to fulfill your needs also.]]></description>
</item></channel>
</rss>
